{"version":3,"sources":["serviceWorker.js"],"names":["cacheName","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","respondWith","match","request","response","requestToCache","clone","fetch","status","responseToCache","put","registration","showNotification"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAG,OAAlB;AACAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiCC,KAAK,IAAI;AACxCA,EAAAA,KAAK,CAACC,SAAN,CACEC,MAAM,CAACC,IAAP,CAAYN,SAAZ,EAAuBO,IAAvB,CAA4BC,KAAK,IAAI;AACnCA,IAAAA,KAAK,CAACC,MAAN,CAAa,CACX,sBADW,EAEX,WAFW,EAGX,oBAHW,EAIX,sBAJW,EAKX,oFALW,CAAb;AAOD,GARD,CADF;AAWD,CAZD,GAcA;;AACAR,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+BC,KAAK,IAAI;AACtCA,EAAAA,KAAK,CAACO,WAAN,CACEL,MAAM,CAACM,KAAP,CAAaR,KAAK,CAACS,OAAnB,EAA4BL,IAA5B,CAAiCM,QAAQ,IAAI;AAC3C,QAAIA,QAAJ,EAAc;AACZ,aAAOA,QAAP;AACD;;AACD,UAAMC,cAAc,GAAGX,KAAK,CAACS,OAAN,CAAcG,KAAd,EAAvB;AACA,WAAOC,KAAK,CAACF,cAAD,CAAL,CAAsBP,IAAtB,CAA2BM,QAAQ,IAAI;AAC5C,UAAI,CAACA,QAAD,IAAaA,QAAQ,CAACI,MAAT,KAAoB,GAArC,EAA0C;AACxC,eAAOJ,QAAP;AACD;;AAED,YAAMK,eAAe,GAAGL,QAAQ,CAACE,KAAT,EAAxB;AACAV,MAAAA,MAAM,CAACC,IAAP,CAAYN,SAAZ,EAAuBO,IAAvB,CAA4BC,KAAK,IAAI;AACnCA,QAAAA,KAAK,CAACW,GAAN,CAAUL,cAAV,EAA0BI,eAA1B;AACD,OAFD;AAGA,aAAOL,QAAP;AACD,KAVM,CAAP;AAWD,GAhBD,CADF;AAmBD,CApBD,GAsBA;;AACAZ,IAAI,CAACC,gBAAL,CAAsB,MAAtB,EAA8BC,KAAK,IAAI;AACrCA,EAAAA,KAAK,CAACC,SAAN,CACEH,IAAI,CAACmB,YAAL,CAAkBC,gBAAlB,CACE,4CADF,EAEE;AAAE,YAAQ;AAAV,GAFF,CADF;AAMD,CAPD","file":"serviceWorker.js","sourceRoot":"../src","sourcesContent":["// cache files and requests\nconst cacheName = \"files\";\nself.addEventListener(\"install\", event => {\n  event.waitUntil(\n    caches.open(cacheName).then(cache => {\n      cache.addAll([\n        \"/assets/logo_200.png\",\n        \"/index.js\",\n        \"/favicon-16x16.png\",\n        \"../favicon-32x32.png\",\n        \"https://fonts.googleapis.com/css?family=Comfortaa:300,400,500,600,700&display=swap\"\n      ]);\n    })\n  );\n});\n\n// return requests with cached resources\nself.addEventListener(\"fetch\", event => {\n  event.respondWith(\n    caches.match(event.request).then(response => {\n      if (response) {\n        return response;\n      }\n      const requestToCache = event.request.clone();\n      return fetch(requestToCache).then(response => {\n        if (!response || response.status !== 200) {\n          return response;\n        }\n\n        const responseToCache = response.clone();\n        caches.open(cacheName).then(cache => {\n          cache.put(requestToCache, responseToCache);\n        });\n        return response;\n      });\n    })\n  );\n});\n\n// Add an event listener for push API events\nself.addEventListener(\"push\", event => {\n  event.waitUntil(\n    self.registration.showNotification(\n      \"Push notifications changing your business!\",\n      { \"icon\": \"/android-chrome-192x192.png\" }\n    )\n  );\n});\n"]}