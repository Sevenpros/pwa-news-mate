{"version":3,"sources":["index.js"],"names":["API_KEY","URL_BASE","hideArticle","document","querySelector","remove","showArticle","title","publishedAt","source","url","urlToImage","content","parent","template","Math","round","Date","name","node","createElement","innerHTML","children","addEventListener","append","getTopArticles","preferredCategories","request","Request","method","fetch","then","response","json","data","articles","renderArticles","getElementById","forEach","article","html","storyTemplate","deferredPrompt","navigator","serviceWorker","register","registration","console","log","scope","catch","error","self","evt","preventDefault","style","display","prompt","userChoice","choice","ID1","setTimeout","window","Notification","requestPermission","result","clearTimeout","onLine","timeoutID"],"mappings":";AACA,MAAMA,EAAU,mCACVC,EAAW,yBAEXC,EAAc,KAClBC,SAASC,cAAc,mBAAmBC,UAGtCC,EAAc,EAClBC,MAAAA,EACAC,YAAAA,EACAC,OAAAA,EACAC,IAAAA,EACAC,WAAAA,EACAC,QAAAA,MAEMC,MAAAA,EAASV,SAASC,cAAc,kBAChCU,oNAM4BP,qEAGbI,UAAmBJ,iEAEHK,GAAW,sKAGNG,KAAKC,OAChC,IAAIC,KAAS,IAAIA,KAAKT,IAAgB,sEAERC,EAAOS,+DAK9CC,EAAOhB,SAASiB,cAAc,YACpCD,EAAKE,UAAYP,EACjBK,EAAKP,QAAQU,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,iBAC/C,QACA,KAtCFpB,SAASC,cAAc,mBAAmBC,WA0C1CQ,EAAOW,OAAOL,EAAKP,UAIfa,EAAiB,MACrBC,EAAsB,CAAC,gBAAiB,WAAY,iBAE9CC,MAAAA,EAAU,IAAIC,WACf3B,uCACDyB,EAAoB,aACX1B,IACX,CACE6B,OAAQ,QAILC,OAAAA,MAAMH,GACVI,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAQA,EAAKC,WAGjBC,EAAiB,UACfvB,MAAAA,EAASV,SAASkC,eAAe,6BAyBhBZ,KACda,QAAQC,IACTpB,MAAAA,EA1Bc,GAAGZ,MAAAA,EAAOC,YAAAA,EAAaG,WAAAA,MACrC6B,MAAAA,wJAIUjC,+JAI6BQ,KAAKC,OACjC,IAAIC,KAAS,IAAIA,KAAKT,IAAgB,wIAKhCG,SAAkBJ,uDAInCO,EAAWX,SAASiB,cAAc,YAEjCN,OADPA,EAASO,UAAYmB,EACd1B,EAASF,SAKH6B,CAAcF,GAC3BpB,EAAKG,SAAS,GAAGC,iBAAiB,QAAS,KACzCjB,EAAYiC,KAEd1B,EAAOW,OAAOL,OAIlB,iBAkBMuB,IAAAA,EAhBA,kBAAmBC,WACrBA,UAAUC,cACPC,SAAS,qDAAqB,IAC9Bd,KAAKe,IACJC,QAAQC,wDAEJF,EAAaG,WAIlBC,MAAMC,IACLJ,QAAQC,oDAAoDG,OAMlEC,KAAK7B,iBAAiB,sBAAuB8B,IAC3CA,EAAIC,iBAEJZ,EAAiBW,EACjBlD,SAASC,cAAc,eAAemB,iBAAiB,QAAS,KAC9DpB,SAASC,cAAc,kBAAkBmD,MAAMC,QAAU,OACzDd,EAAee,SACff,EAAegB,WAAW3B,KAAK4B,IAC7BjB,EAAiB,SAGrBvC,SAASC,cAAc,WAAWmB,iBAAiB,QAAS,KAC1DpB,SAASC,cAAc,kBAAkBmD,MAAMC,QAAU,SAE3DrD,SAASC,cAAc,kBAAkBmD,MAAMC,QAAU,UAIrDI,MAAAA,EAAMC,WAAW,KACjB,iBAAkBC,QACpBC,aAAaC,oBAAoBjC,KAAKkC,IACtB,WAQlBC,aAAaN,IACZ,MAcsB,IAArBjB,UAAUwB,SACZhE,SAASC,cAAc,UAAUmD,MAAMC,QAAU,QACjDK,WAAW,KACT1D,SAASC,cAAc,UAAUmD,MAAMC,QAAU,QAChD,MAELJ,KAAK7B,iBAAiB,UAAW,KAC/BpB,SAASC,cAAc,UAAUmD,MAAMC,QAAU,QAC3CY,MAAAA,EAAYP,WAAW,KAC3B1D,SAASC,cAAc,UAAUmD,MAAMC,QAAU,OACjDU,aAAaE,IACZ,aAEChC,IA5ER","file":"src.ac66b706.js","sourceRoot":"../src","sourcesContent":["// variables and constants\nconst API_KEY = \"53347d537f0143dfb390e4a816c50efa\";\nconst URL_BASE = \"https://newsapi.org/v2\";\n\nconst hideArticle = () => {\n  document.querySelector(\".container-back\").remove();\n};\n// get a single article\nconst showArticle = ({\n  title,\n  publishedAt,\n  source,\n  url,\n  urlToImage,\n  content\n}) => {\n  const parent = document.querySelector(\".app-container\");\n  const template = `\n<div class=\"container-back\">\n        <div class=\"full-story-container\">\n          <button class=\"action-btn\">\n              <span>&#10005;</span>\n          </button>\n          <h4 class=\"story-title\">${title}</h4>\n\n          <div class=\"story-img\">\n            <img src=${urlToImage} alt=\"${title}\" />\n          </div>\n          <div class=\"story-content\">${content || \"content not available\"}</div>\n          <div class=\"story-desc\">\n              <div class=\"story-category\">life</div>\n              <div class=\"story-pub-date\">${Math.round(\n                (new Date() - new Date(publishedAt)) / 3600000\n              )} mins ago</div>\n              <div class=\"story-source\">from ${source.name}</div>\n          </div>\n        </div>\n      </div>\n`;\n  const node = document.createElement(\"template\");\n  node.innerHTML = template;\n  node.content.children[0].children[0].children[0].addEventListener(\n    \"click\",\n    () => {\n      hideArticle();\n    }\n  );\n  parent.append(node.content);\n};\n\n// get top articles\nconst getTopArticles = async (\n  preferredCategories = [\"entertainment\", \"business\", \"technology\"]\n) => {\n  const request = new Request(\n    `${URL_BASE}/top-headlines?country=us&category=${\n      preferredCategories[0]\n    }&apiKey=${API_KEY}`,\n    {\n      method: \"GET\"\n    }\n  );\n\n  return fetch(request)\n    .then(response => response.json())\n    .then(data => data.articles);\n};\n\nconst renderArticles = async () => {\n  const parent = document.getElementById(\"user-stories-group\");\n  const storyTemplate = ({ title, publishedAt, urlToImage }) => {\n    const html = `\n    <div class=\"story-container top-story\">\n              <div class=\"story-desc\">\n                <h4 class=\"story-title\">\n                  ${title}\n                </h4>\n                <div>\n                  <span class=\"story-category\">life</span>\n                  <span class=\"story-pub-date\">${Math.round(\n                    (new Date() - new Date(publishedAt)) / 3600000\n                  )} mins ago</span>\n                </div>\n              </div>\n              <div class=\"story-img\">\n                <img src=${urlToImage} alt=${title} />\n              </div>\n            </div>\n    `;\n    const template = document.createElement(\"template\");\n    template.innerHTML = html;\n    return template.content;\n  };\n\n  const articles = await getTopArticles();\n  articles.forEach(article => {\n    const node = storyTemplate(article);\n    node.children[0].addEventListener(\"click\", () => {\n      showArticle(article);\n    });\n    parent.append(node);\n  });\n};\n\n(async function init() {\n  // check if service worker API is supported\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker\n      .register(\"/serviceWorker.js\", {})\n      .then(registration => {\n        console.log(\n          `serviceWorker registered successfully with scope ${\n            registration.scope\n          }`\n        );\n      })\n      .catch(error => {\n        console.log(`ServiceWorker registration failed with error ${error}`);\n      });\n  }\n\n  // listen to beforeinstallprompt on window object to use a custom install banner for PWA\n  let deferredPrompt;\n  self.addEventListener(\"beforeinstallprompt\", evt => {\n    evt.preventDefault();\n    // Stash the event so it can be triggered later.\n    deferredPrompt = evt;\n    document.querySelector(\"#installBtn\").addEventListener(\"click\", () => {\n      document.querySelector(\"#installBanner\").style.display = \"none\";\n      deferredPrompt.prompt();\n      deferredPrompt.userChoice.then(choice => {\n        deferredPrompt = null;\n      });\n    });\n    document.querySelector(\"#cancel\").addEventListener(\"click\", () => {\n      document.querySelector(\"#installBanner\").style.display = \"none\";\n    });\n    document.querySelector(\"#installBanner\").style.display = \"block\";\n  });\n\n  //Request for notification permission\n  const ID1 = setTimeout(() => {\n    if (\"Notification\" in window) {\n      Notification.requestPermission().then(result => {\n        if ((result = \"denied\")) {\n          return;\n        }\n        if ((result = \"default\")) {\n          return;\n        }\n      });\n    }\n    clearTimeout(ID1);\n  }, 5000);\n\n  //send a push notification\n  // const ID2 = setTimeout(() => {\n  //   if (\"Notification\" in window && Notification.permission === \"granted\") {\n  //     // navigator.serviceWorker.getRegistration().then()\n  //     const notification = new Notification(\n  //       \"Welcome to the finest news in town!\"\n  //     );\n  //   }\n  //   clearTimeout(ID2);\n  // }, 10000);\n  // add event listeners for the offline and online events\n  // so that we can notify the user that the content is cached\n  if (navigator.onLine !== true) {\n    document.querySelector(\".toast\").style.display = \"block\";\n    setTimeout(() => {\n      document.querySelector(\".toast\").style.display = \"none\";\n    }, 5000);\n  }\n  self.addEventListener(\"offline\", () => {\n    document.querySelector(\".toast\").style.display = \"block\";\n    const timeoutID = setTimeout(() => {\n      document.querySelector(\".toast\").style.display = \"none\";\n      clearTimeout(timeoutID);\n    }, 5000);\n  });\n  await renderArticles();\n})();\n"]}